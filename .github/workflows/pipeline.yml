name: Deployment pipeline

on:
  push: # when pushing or merging
    branches:
      - master # ^ to the master branch
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  strategy:
    max-parallel: 1 # Execute only one job at a time (workaround so that the version bump does not get executed before testing and deployment is done)
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: npm install
        run: npm install
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm run test
      - name: e2e tests
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start-prod
          # wait for the server to start: https://github.com/cypress-io/github-action
          wait-on: http://localhost:5000
      # Deploy to Heroku action: https://github.com/marketplace/actions/deploy-to-heroku
      - uses: akhileshns/heroku-deploy@v3.8.8 # This is the action
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}} # run conditionally only when a pull request is merged (in this case, push meand pull request merge). https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions
        with:
          # the secret has been generated by the Heroku CLI and has been set in our Github repository's settings.
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "ndeamador-fso2020-pokedex" #Must be unique in Heroku
          heroku_email: "ndeamador@gmail.com"
          # adding healthcheck, to make sure the application is running after depoloyment:
          healthcheck: "https://ndeamador-fso2020-pokedex.herokuapp.com/health" # visit url (GET request) to check that the app is running after deployment
          checkstring: "ok" # look for othis specific string in the page above
          delay: 5 # a delay (in seconds) to prevent that the healtcheck is performed before the application has been set up on Heroku.
          rollbackonhealthcheckfailed: true # rollback to previous (working) version if healthcheck fails.
      - uses: actions/checkout@v2 # a (rather dirty) workaround
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

  versioning:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      # The following step increases the version when a pull request is merged and tag the release with a version number.
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.33.0
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}}
        env:
          # because github-tag-action is third party, we need to provide the token for authentication in the repository.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  Some useful logs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: console messages
        run: |
          echo 'condition: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}}'
          echo 'title contains #skip:  ${{ contains(github.event.head_commit.message, '#skip')}}'
          echo "head_commit: ${{github.event.head_commit.message}}"
          echo "github.base_ref: ${{github.base_ref}}"
          echo "github.head_ref: ${{github.head_ref}}"
          echo "github.event_name: ${{github.event_name}}"
          echo "title contains ${{contains(github.event.head_commit.message, 'contain_test')}}"
          echo "title doesn't ${{contains(github.event.head_commit.message, 'nothing')}}"
      - name: gihub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
